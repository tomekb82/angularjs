/// <reference path='../../reference.ts' />
describe('Testing a controller', function () {
    var $scope, ctrl, $timeout;
    var someServiceMock;
    beforeEach(function () {
        someServiceMock = jasmine.createSpyObj('someService', ['someAsyncCall']);
        angular.mock.module('myApp');
        inject(function ($rootScope, $controller, $q, _$timeout_) {
            $scope = $rootScope.$new();
            //someServiceMock.someAsyncCall.andReturn($q.when('weee'));
            $timeout = _$timeout_;
            ctrl = $controller('MainCtrl', {
                $scope: $scope,
                someService: someServiceMock
            });
        });
    });
    it('should start with foo and bar populated', function () {
        expect($scope.foo).toEqual('foo');
        expect($scope.bar).toEqual('bar');
    });
    it('should add !!! to foo when test1() is called', function () {
        $scope.foo = 'x';
        $scope.test1();
        expect($scope.foo).toEqual('x!!!');
    });
    it('should update baz when bar is changed', function () {
        $scope.bar = 'test';
        $scope.$apply();
        expect($scope.baz).toEqual('testbaz');
    });
    it('should update fizz asynchronously when test2() is called', function () {
        $scope.test2();
        expect(someServiceMock.someAsyncCall).toHaveBeenCalled();
        $timeout.flush();
        expect($scope.fizz).toEqual('weee');
    });
});
//# sourceMappingURL=AppSpec.js.map
